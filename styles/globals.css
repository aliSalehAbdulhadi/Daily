@import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;400;500;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Comfortaa';
  src: url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;400;500;600&display=swap');
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

.bg-icon {
  background-image: url('/sun3.svg');
}

input:checked + .bg-icon {
  background-image: url('/moon3.svg');
}

.card-animation {
  trnasition-property: transform;
  trnasition-duration: 0.5s;
  transition-timing-function: ease-in-out;
}

.card-animation:hover {
  transform: scale(1.05);
}

.scrollBar::-webkit-scrollbar {
  width: 4px;
  direction: ltr;
}

.scrollBar::-webkit-scrollbar-thumb {
  background: #f2f2f2;
  border-radius: 3px;
}

textarea::-webkit-scrollbar {
  width: 5px;
}

textarea::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 10px #bddae0;
}

textarea::-webkit-scrollbar-thumb {
  background-color: #bddae0;
}

input::-webkit-input-placeholder {
  font-size: 13px;
}

.container {
  display: block;
  position: relative;
  padding-left: 5px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.container input:checked {
  background-color: #e6e6e6;
}

.autoFillText input:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 50px white inset;
  -webkit-text-fill-color: white;
}
.autoFillText input:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 50px white inset;
  -webkit-text-fill-color: white;
}

.wrapWord {
  white-space: -moz-pre-wrap !important;
  white-space: -webkit-pre-wrap;
  white-space: -pre-wrap;
  white-space: -o-pre-wrap;
  white-space: pre-wrap;
  word-wrap: break-word;
  word-break: break-all;
  white-space: normal;
}

@keyframes strike {
  from {
    text-decoration-color: transparent;
  }
  to {
    text-decoration-color: auto;
  }
}
.strike {
  text-decoration: line-through;
  animation: strike 1s linear;
}

@keyframes deleteAnimation {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.6);
    opacity: 0.6;
  }
}
.deleteMilestone {
  animation: deleteAnimation 0.3s linear;
}

.underlineAnimation {
  position: relative;
}

.underlineAnimation::after {
  content: '';
  border-bottom: 1px solid white;
  height: 5px;
  position: absolute;
  top: 55px;
  transition: 0.3s ease-in-out;
  animation: borderBottomAnimation 0.3s linear;
  width: 74%;
  right: 17%;
}

@keyframes borderBottomAnimation {
  from {
    width: 0%;
  }
  to {
    width: 65%;
  }
}

.singleMilestoneUnderline {
  position: relative;
}

.singleMilestoneUnderline::after {
  content: '';
  border-bottom: 1px solid white;
  height: 5px;
  position: absolute;
  top: 20px;
  transition: 0.3s ease-in-out;
  animation: borderBottomAnimation 0.3s linear;
  width: 100%;
}

@keyframes singleMilestoneAnimation {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}

.deleteUnderline {
  position: relative;
}

.deleteUnderline::after {
  content: '';
  border-bottom: 1px solid white;
  height: 10px;
  position: absolute;
  top: 5px;
  transition: 0.3s ease-in-out;
  animation: borderBottomAnimation 0.3s linear;
  width: 0%;
}

@keyframes deleteUnderlineAnimation {
  from {
    width: 100%;
  }
  to {
    width: 0%;
  }
}

.borderTop {
  position: relative;
}

.borderTop::before {
  content: '';
  border-bottom: 2px solid white;
  border-radius: 0.25rem;
  height: 0px;
  position: absolute;
  top: 0px;
  left: 0px;
  transition: 0.3s ease-in-out;
  animation: borderAnimation 0.3s linear;
  width: 100%;
}

.borderBottom {
  position: relative;
}

.borderBottom::after {
  content: '';
  border: 1px solid white;
  border-radius: 0.25rem;
  height: 0px;
  position: absolute;
  bottom: 0px;
  left: 0px;
  transition: 0.3s ease-in-out;
  animation: borderAnimation 0.3s linear;
  width: 100%;
}

.mobileTaskCardBoxShadow {
  box-shadow: 0 0 12px rgba(0, 0, 0, 0.5);
  clip-path: inset(0px -15px 0px 0px);
}

.textAreaNoResize {
  resize: none;
}

@keyframes borderAnimation {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}

.taskEnter {
  animation: taskEnterAnimation 0.2s linear;
}

@keyframes taskEnterAnimation {
  from {
    transform: translateX(25rem);
  }
  to {
    transform: translateX(0rem);
  }
}

.userModalEnterPc {
  position: absolute;
  right: 8px;
  transform: translateY(0rem);

  animation: userModalEnterPcAnimation 0.3s linear;
}

@keyframes userModalEnterPcAnimation {
  from {
    transform: translateY(-10rem);
  }
  to {
    transform: translateY(0rem);
  }
}

.userModalExitPc {
  animation: userModalExitPcAnimation 0.3s linear;
}

@keyframes userModalExitPcAnimation {
  from {
    transform: translateY(0rem);
  }
  to {
    transform: translateY(-10rem);
  }
}

.userModalEnter {
  animation: userModalEnterAnimation 0.3s linear;
}

@keyframes userModalEnterAnimation {
  from {
    transform: translateY(-10rem);
  }
  to {
    transform: translateY(0rem);
  }
}

.userModalExit {
  animation: userModalExitAnimation 0.25s linear;
}

@keyframes userModalExitAnimation {
  from {
    transform: translateY(0rem);
  }
  to {
    transform: translateY(-10rem);
  }
}

.userModalLayoutEnter {
  animation: userModalLayoutEnterAnimation 0.3s linear;
}

@keyframes userModalLayoutEnterAnimation {
  0% {
    margin-top: 103%;
  }
  100% {
    margin-top: 0;
  }
}

.userModalLayoutExit {
  animation: userModalLayoutExitAnimation 0.25s linear;
}

@keyframes userModalLayoutExitAnimation {
  0% {
    margin-top: 0;
  }
  100% {
    margin-top: 103%;
  }
}

.taskMobileEnter {
  animation: taskMobileEnter 0.3s linear;
}

@keyframes taskMobileEnter {
  from {
    transform: translateX(35rem);
  }
  to {
    transform: translateX(0rem);
  }
}

.selectedTask {
  animation: selectedTaskAnimation 0.3s linear;
  height: 7rem;
}

@keyframes selectedTaskAnimation {
  from {
    height: 0rem;
  }
  to {
    height: 7rem;
  }
}

.quillFormEnterAnimationMobile {
  animation: quillFormAnimationMobile 0.2s linear;
}

@keyframes quillFormAnimationMobile {
  from {
    transform: translateY(-30rem);
  }
  to {
    transform: translateY(0%);
  }
}

.quillFormEnterAnimation {
  animation: quillFormAnimation 0.2s linear;
}

@keyframes quillFormAnimation {
  from {
    transform: translateY(45rem);
    width: 10%;
    left: 13%;
  }
  to {
    transform: translateY(0%);
    width: 75%;
    left: 13%;
  }
}

.swiper {
  position: relative;
  overflow: hidden;
  border-radius: 0.25rem;
}

.swiper::after {
  content: '';
  background-image: url('/svg/delete.svg');
  background-repeat: no-repeat;
  position: absolute;
  transform: translate(-17%, -65%);
  left: 100%;
  height: 100%;
  width: 100%;
}

#quill {
  min-height: 350px;
  overflow: hidden;
  font-family: Comfortaa;
}
#quill-edit {
  min-height: 200px;
  overflow: hidden;
  font-family: Comfortaa;
}

.ql-toolbar {
  background-color: #f2f2f2;
  border: none !important;
}

.ql-editor {
  font-family: Comfortaa;
}

.ql-container.ql-snow {
  border: none !important;
}
